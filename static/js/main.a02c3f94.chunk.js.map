{"version":3,"sources":["components/FPS/index.js","components/FPS/Fps.js","utils/useInterval.js","components/Dimensions/index.js","components/Dimensions/Dimensions.js","utils/utils.js","components/Cube/index.js","components/Cube/Cube.js","components/Fullscreen/index.js","components/Fullscreen/Fullscreen.js","components/RGB/index.js","components/RGB/RGB.js","components/Gradients/Gradients.js","App.js","reportWebVitals.js","index.js"],"names":["Fps","useState","fpsHistory","setFpsHistory","data","labels","datasets","label","map","e","fill","backgroundColor","borderColor","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","a","Promise","resolve","requestAnimationFrame","t1","t2","newfps","curr","length","filter","c","i","toFixed","calc","className","Number","options","scales","yAxes","ticks","beginAtZero","xAxes","min","suggestedMax","animation","Dimensions","props","dimensions","width","height","getScreenDimensions","window","screen","devicePixelRatio","Cube","Fullscreen","onClick","elem","document","documentElement","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","RGB","Gradients","App","setDimensions","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a02c3f94.chunk.js","sourcesContent":["import Fps from './Fps';\n\nexport default Fps;\n","import { useState } from 'react'; import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport useInterval from '../../utils/useInterval';\n\nconst getFPS = () =>\n    new Promise(resolve =>\n        requestAnimationFrame(t1 =>\n            requestAnimationFrame(t2 => resolve(1000 / (t2 - t1)))\n        )\n    )\n    \nconst Fps = () => {\n    const [fpsHistory, setFpsHistory] = useState(['N/A']);\n\n    const data = {\n        labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n        datasets: [\n            {\n                label: 'FPS',\n                data: fpsHistory.map(e => e),\n                fill: false,\n                backgroundColor: 'rgb(255, 99, 132)',\n                borderColor: 'rgba(255, 99, 132, 0.2)',\n            }\n        ]\n    };\n    \n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: false,\n                    }\n                }\n            ],\n            xAxes: [{\n                min: 10,\n                suggestedMax: 10\n            }]\n        },\n        animation: false\n    };\n\n    useInterval(() => {\n        const calc = async () => {\n            const newfps = await getFPS();\n            \n            setFpsHistory(curr => {\n                if (curr.length === 10) {\n                    return [...curr.filter((c, i) => i > 0), newfps.toFixed(4)];\n                } else {\n                    return [...curr, newfps.toFixed(4)];\n                }\n            })\n        }\n\n        calc();\n    }, 5000);\n\n    return (\n        <div className=\"Fps\">\n            {Number(fpsHistory[fpsHistory.length -1])} fps\n            <Line data={data} options={options} />\n        </div>\n    )\n}\n\nexport default Fps;\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval (callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        function tick () {\n            savedCallback.current();\n        }\n\n        const id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import Dimensions from './Dimensions';\n\nexport default Dimensions;\n","import './Dimensions.scss';\n\nconst Dimensions = props => {\n    const { dimensions } = props;\n    return (\n        <div className=\"Dimensions\">\n            Current dimensions:<br/>\n            { dimensions.width } x { dimensions.height }\n        </div>\n    )\n}\n\nexport default Dimensions;\n","function debounce (fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nconst getScreenDimensions = () => ({\n    width: window.screen.width * window.devicePixelRatio,\n    height: window.screen.height * window.devicePixelRatio\n})\n\nexport {\n    debounce,\n    getScreenDimensions\n}\n","import Cube from './Cube';\n\nexport default Cube;\n","import './Cube.scss';\n\nconst Cube = () => {\n    return (\n        <div className=\"Cube\">\n            <div className=\"container\">\n                <div id=\"cube\">\n                    <div className=\"face front\"></div>\n                    <div className=\"face back\"></div>\n                    <div className=\"face right\"></div>\n                    <div className=\"face left\"></div>\n                    <div className=\"face top\"></div>\n                    <div className=\"face bottom\"></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cube;\n","import Fullscreen from './Fullscreen';\n\nexport default Fullscreen;\n","import './Fullscreen.scss';\n\nconst Fullscreen = () => {\n    const toggleFullscreen = () => {\n        const elem = document.documentElement;\n\n        if (!document.fullscreenElement && !document.mozFullScreenElement &&\n          !document.webkitFullscreenElement && !document.msFullscreenElement) {\n          if (elem.requestFullscreen) {\n            elem.requestFullscreen();\n          } else if (elem.msRequestFullscreen) {\n            elem.msRequestFullscreen();\n          } else if (elem.mozRequestFullScreen) {\n            elem.mozRequestFullScreen();\n          } else if (elem.webkitRequestFullscreen) {\n            elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n          }\n        }\n    }\n\n    return (\n        <div className=\"Fullscreen\">\n            <div className=\"toggle\" onClick={toggleFullscreen}>\n                â›¶\n            </div>\n        </div>\n    )\n}\n\nexport default Fullscreen;\n","import RGB from './RGB';\n\nexport default RGB;\n","import './RGB.scss';\n\nconst RGB = () => {\n    return (\n        <div className=\"RGB\">\n          <div className=\"R\"></div>\n          <div className=\"G\"></div>\n          <div className=\"B\"></div>\n        </div>\n    )\n}\n\nexport default RGB;\n","import './Gradients.scss';\n\nconst Gradients = () => {\n    return (\n        <div className=\"Gradients\">\n            <div className=\"bw\"></div>\n            <div className=\"wb\"></div>\n        </div>\n    )\n}\n\nexport default Gradients;\n","import { useState, useEffect } from 'react';\n\nimport Fps from './components/FPS';\nimport Dimensions from './components/Dimensions';\n\nimport { debounce, getScreenDimensions } from './utils/utils';\n\nimport './App.scss';\nimport Cube from './components/Cube';\nimport Fullscreen from './components/Fullscreen';\nimport RGB from './components/RGB';\nimport Gradients from './components/Gradients/Gradients';\n\nfunction App() {\n    const [dimensions, setDimensions] = useState(getScreenDimensions())\n\n    useEffect(() => {\n        const debouncedHandleResize = debounce(() => {\n            setDimensions(getScreenDimensions)\n        }, 100)\n\n        window.addEventListener('resize', debouncedHandleResize)\n        \n        return _ => {\n            window.removeEventListener('resize', debouncedHandleResize)\n        }\n    })\n\n    return (\n        <div className=\"App\">\n            <div className=\"top-left\">\n                <Dimensions dimensions={dimensions} />\n            </div>\n            <div className=\"top-right\">\n                <Fullscreen />\n                <Fps />\n            </div>\n            <div className=\"center\">\n                <Cube />\n                <RGB />\n            </div>\n            <div className=\"bottom\">\n                <Gradients />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}